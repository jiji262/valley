---
import Layout from '../../../layouts/Base.astro'
import { isValidPasswordResetToken } from '../../../lib/auth/token'
import { isValidPassword } from '../../../lib/auth/validation'
import { fetchUserIdFromPasswordResetToken } from '../../../lib/auth/token'
import { auth } from '../../../lib/auth/lucia'
import { createSession } from '../../../lib/auth/session'

const session = await Astro.locals.auth.validate()
if (session) return Astro.redirect('/', 302)

let invalid = false
let success = false
let error = ''

const { token } = Astro.params
const validToken =
  await isValidPasswordResetToken(token)

if (!validToken) {
  error = 'Invalid token'
  invalid = true
}

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData()
  const password =
    formData.get('password')?.toString() || ''

  if (isValidPassword(password)) {
    const userId =
      await fetchUserIdFromPasswordResetToken(
        token
      )

    const user = await auth.getUser(
      userId.toString()
    )
    await auth.invalidateAllUserSessions(
      user.userId
    )
    await auth.updateKeyPassword(
      'email',
      user.email,
      password
    )

    const session = await createSession(
      user.email,
      password
    )

    // set the cookie
    Astro.locals.auth.setSession(session)

    return Astro.redirect('/')
  } else {
    error = 'Password is invalid'
  }
}
---

<Layout>
  {
    invalid ? (
      <div class='mt-10'>
        {error && (
          <p class='p-2 text-white bg-red-500'>
            {error}
          </p>
        )}
        {success && (
          <p>✅ Password reset successfully</p>
        )}
      </div>
    ) : (
      <>
        <h1 class='mb-4 font-bold border-b'>
          Set new password
        </h1>
        <form method='post'>
          <p class='flex justify-between max-w-sm mb-4'>
            <label for='password' class=''>
              Password:
            </label>
            <input
              type='password'
              name='password'
              class='p-1 text-black border'
            />
          </p>
          <input
            type='submit'
            class='px-3 py-1 border-2 border-gray-700 cursor-pointer'
            value='Reset password'
          />
        </form>

        <div class='mt-10'>
          {error && (
            <p class='p-2 text-white bg-red-500'>
              {error}
            </p>
          )}
          {success && (
            <p>✅ Password reset successfully</p>
          )}
        </div>
        <p class='mt-5'>
          <a href='/auth/login' class='underline'>
            Login
          </a>
        </p>
      </>
    )
  }
</Layout>
